type Query {
  _: String
}
type Mutation {
  _: String
}

extend type Query {
  userById(id: String!): User
}

extend type Mutation {
  signUp(input: SignUpInput!): User!
  signIn(input: SignInInput!): SignInResult!
}

type User {
  id: ID!
  name: String
  email: String!
}

type SignInResult {
  token: String
  message: String
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  name: String
  email: String!
  password: String!
  passwordConfirm: String!
}
