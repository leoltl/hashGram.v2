extend type Query {
  userById(id: String!): User
}

extend type Mutation {
  signUp(input: SignUpInput!): User!
  signIn(input: SignInInput!): SignInResult!
  followUser(userToFollow: String!): FollowUserResult!
}

type User @key(fields: "id") {
  id: ID!
  name: String!
  email: String!
  followers: [User!]
  following: [User!]
}

type SignInResult {
  token: String
  message: String
}

type FollowUserResult {
  following: Boolean
  message: String
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  name: String!
  email: String!
  password: String!
  passwordConfirm: String!
}
